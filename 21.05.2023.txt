#include <iostream>

using namespace std;

class fraction {
private:
    int numerator{};
    int denominator{};

public:

    fraction() = default;

    fraction(int numerator, int denominator) {
       this->numerator = numerator;
        this->denominator = denominator;
    }


    void enter()  {
        cout << "Enter numerator: ";
        cin >> numerator;

        cout << "Enter denominator: ";
        cin >> denominator;

        if (denominator == 0) {
            cout << "Denominator cannot be zero." << endl;
        }
    }


    fraction sum(const fraction& second) const {
        int num = numerator * second.denominator + second.numerator * denominator;
        int denom = denominator * second.denominator;
        return fraction(num, denom);
    }


    fraction subtraction(const fraction& second) const {
        int num = numerator * second.denominator - second.numerator * denominator;
        int denom = denominator * second.denominator;
        return fraction(num, denom);
    }


    fraction product(const fraction& second) const {
        int num = numerator * second.numerator;
        int denom = denominator * second.denominator;
        return fraction(num, denom);
    }

    fraction division(const fraction& second) const {
        int num = numerator * second.denominator;
        int denom = denominator * second.numerator;
        return fraction(num, denom);
    }

    void print() const {
        cout << numerator << '/' << denominator << endl;
    }
};

int main() {
    fraction fraction1;

    fraction fraction2;

    fraction1.enter();

    fraction2.enter();

    fraction Sum = fraction1.sum(fraction2);
    cout << "Sum: ";
    Sum.print();

    fraction Subtraction = fraction1.subtraction(fraction2);
    cout << "Subtraction: ";
    Subtraction.print();


    fraction Product = fraction1.product(fraction2);
    cout << "Product: ";
    Product.print();


    fraction Division = fraction1.division(fraction2);
    cout << "Division: ";
    Division.print();

    return 0;
}
